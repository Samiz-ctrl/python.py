# -*- coding: utf-8 -*-
"""Listas, classes, objetos, comando dict.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gfdl6adlquQlOHpZbRKLBhYYA9fkB3X6
"""

lista = [1,2,3,4,5,6,7,8,9,10]

print(type(lista))

print(lista)

y = 4.34

import math
type(math)

x = [3,6,9]
y = [45, 'abc']
print(x[1])                # Printa o valor da lista, começando do 0

x = [3,6,9]
x[1] = 99
x.append(42)               # Acrescenta um valor à lista
print(x)

y = [45,'abc']
last = y.pop()             # Pop é um método de último caractere da lista
print(last)

"""Criando Classes"""

class animal:              # Cabeçalho
    pass                   # Corpo. Pass faz o código passar.

if __name__ == '__main__': # Quando desejamos saber se o estamos executando diretamente ou importando
    x = animal()
    y = animal()
    y2 = y
    print(y == y2)
    print(y == x)

print(type(animal))

"""Atributos"""

class animal:
    pass
x = animal()
y = animal()
x.name = 'Gato'
x.born_year = '2020'
y.name = 'Cachorro'
y.born_year = '2019'

print(x.__dict__)

list.__dict__

tuple.__dict__

set.__dict__

"""Métodos"""

# Criando uma função que faz nosso gato dizer oi

def oi(obj):
    print('Miau. Eu sou o gato ' + obj.name + '!')

class animal:
    pass

x = animal()
x.name = 'Bilbo'
oi(x)

def miau(obj):
    print('Miau!')

def rontonar(obj):
    print('prprprpr')
class animal:
    miar = miau
    ronronar = ronronar

x = animal ()
x.name = 'Bilbo'
animal.miar(x)
animal.ronronar(x)

"""Método Init"""

# Init cria o objeto da classe
class animal:
    def __init__(self): # Padrão especificado pela PEP-8. 'self = nome classe'
        print('__init__ foi executado!')
x = animal()

class animal:
  def __init__(self, name=None):
    self.name = name
  def miau(self):
    if self.name:
      print('miau, eu sou' + self.name)
    else:
      print('prprpr')

x = animal()
x.miau()

"""Encapsulamento"""

class animal:
  pass
def set_name(self, name):
  self.name = name
def get_name(self):
  return self.name

x = animal()
x.set_name('Bilbo')
x.miau()
y = animal()
y.set_name(x.get_name())
print(y.get_name())

class animal()
def__init__(self):
